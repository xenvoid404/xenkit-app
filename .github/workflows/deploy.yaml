name: Deploy to VPS

on:
    push:
        branches:
            - master

env:
    DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/xenkit-app

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ env.DOCKER_IMAGE_NAME }}:latest
                  cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:buildcache
                  cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to VPS
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USERNAME }}
                  key: ${{ secrets.VPS_PRIVATE_KEY }}
                  script: |
                      set -e
                      cd ${{ secrets.VPS_PROJECT_PATH }}
                      cat <<'EOF' >> .env
                      APP_NAME="Xenkit"
                      APP_ENV="development"
                      APP_URL="https://xenkit.my.id"
                      EOF
                      docker compose pull
                      docker compose up -d --remove-orphans
                      echo "Pruning old docker images..."
                      docker image prune -af
